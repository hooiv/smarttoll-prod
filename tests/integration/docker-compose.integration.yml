version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: test_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: test_kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://test_kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10

  redis:
    image: redis:7.0-alpine
    container_name: test_redis
    ports:
      - "6380:6379"

  postgres:
    image: postgis/postgis:15-3.3
    container_name: test_postgres
    environment:
      POSTGRES_DB: test_smarttoll
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_smarttoll -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  obu_simulator:
    build:
      context: ../../obu_simulator
    container_name: test_obu_simulator
    environment:
      KAFKA_BROKER: test_kafka:9092
      PYTHONUNBUFFERED: 1
      LOG_LEVEL: DEBUG
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - default
    restart: unless-stopped

  toll_processor:
    build:
      context: ../../toll_processor
      dockerfile: Dockerfile
    container_name: test_toll_processor
    environment:
      KAFKA_BROKER: test_kafka:9092
      PYTHONUNBUFFERED: 1
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - default
    restart: unless-stopped

  billing_service:
    build:
      context: ../../billing_service
      dockerfile: Dockerfile
    container_name: test_billing_service
    environment:
      KAFKA_BROKER: test_kafka:9092
      PYTHONUNBUFFERED: 1
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - default
    restart: unless-stopped

networks:
  default:
    driver: bridge